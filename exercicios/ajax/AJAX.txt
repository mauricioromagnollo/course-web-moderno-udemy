# AJAX:

* Asynchronous JavaScript And XML
* É uma TÉCNICA usada com JavaScript
* Atualiza a página (ou parte dela) sem recarregar (reload)
* Comunica de forma assíncrona com um Servidor Web, ou seja, envia e recebe dados em background
* Usa muito... Callback, Promise, Async/Await
* Resolve o problema de travar o browser, bloqueando o event loop 
* Você faz com que a requisição seja feita pelo JavaScript e não pelo Browser 
* Capiturar o evento e controlar via JavaScript
* Prevent Default, previnir/interceptar o evento padrão de reload da página

* Formas de fazer requisições:
  - Axios
  - Jquery
  - Fetch

# DEPENDENCIAS:

$ cd projeto
$ npm init -y
// inserindo um nodemon no "Scripts": <package.json>
"Scripts": {
  "start": "nodemon server.js"
}
$ npm i --save body-parser@1.18.2 -E
$ npm i --save express@4.16.3 -E
$ npm i --save multer@1.3.0 -E
$ npm i --save-dev nodemon@1.17.3 -E

# npm i
  -- instala as dependências que estão no package.json


# Formas de fazer requisições AJAX: 
  - xmlHttpRequest  // mais complicada
  - fetch API       // mais símples, não precisa de framework, substitui o xmlHttpRequest
  - axios

Axios não é suportado por padrão pelo Browser, igual o Fetch, porém é muito utilizado
e possui um nível de compatibilidade maior. 